{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkAnswer = exports.rawMarkup = void 0;\n\nvar _marked = _interopRequireDefault(require(\"marked\"));\n\nvar _dompurify = _interopRequireDefault(require(\"dompurify\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar rawMarkup = function rawMarkup(data) {\n  var sanitizer = _dompurify.default.sanitize;\n  var rawMarkup = (0, _marked.default)(sanitizer(data));\n  return {\n    __html: rawMarkup\n  };\n};\n\nexports.rawMarkup = rawMarkup;\n\nvar checkAnswer = function checkAnswer(index, correctAnswer, answerSelectionType, _ref) {\n  var userInput = _ref.userInput,\n      userAttempt = _ref.userAttempt,\n      currentQuestionIndex = _ref.currentQuestionIndex,\n      continueTillCorrect = _ref.continueTillCorrect,\n      showNextQuestionButton = _ref.showNextQuestionButton,\n      incorrect = _ref.incorrect,\n      correct = _ref.correct,\n      setButtons = _ref.setButtons,\n      setCorrectAnswer = _ref.setCorrectAnswer,\n      setIncorrectAnswer = _ref.setIncorrectAnswer,\n      setCorrect = _ref.setCorrect,\n      setIncorrect = _ref.setIncorrect,\n      setShowNextQuestionButton = _ref.setShowNextQuestionButton,\n      setUserInput = _ref.setUserInput,\n      setUserAttempt = _ref.setUserAttempt;\n  var indexStr = \"\".concat(index);\n  var disabledAll = {\n    0: {\n      disabled: true\n    },\n    1: {\n      disabled: true\n    },\n    2: {\n      disabled: true\n    },\n    3: {\n      disabled: true\n    }\n  };\n\n  if (answerSelectionType === 'single') {\n    if (userInput[currentQuestionIndex] === undefined) {\n      userInput.push(index);\n    }\n\n    if (indexStr === correctAnswer) {\n      if (incorrect.indexOf(currentQuestionIndex) < 0 && correct.indexOf(currentQuestionIndex) < 0) {\n        correct.push(currentQuestionIndex);\n      }\n\n      setButtons(function (prevState) {\n        return _objectSpread({}, prevState, disabledAll, _defineProperty({}, index - 1, {\n          className: indexStr === correctAnswer ? \"correct\" : \"incorrect\"\n        }));\n      });\n      setCorrectAnswer(true);\n      setIncorrectAnswer(false);\n      setCorrect(correct);\n      setShowNextQuestionButton(true);\n    } else {\n      if (correct.indexOf(currentQuestionIndex) < 0 && incorrect.indexOf(currentQuestionIndex) < 0) {\n        incorrect.push(currentQuestionIndex);\n      }\n\n      if (continueTillCorrect) {\n        setButtons(function (prevState) {\n          return Object.assign({}, prevState, _defineProperty({}, index - 1, {\n            disabled: !prevState[index - 1]\n          }));\n        });\n      } else {\n        setButtons(function (prevState) {\n          return Object.assign({}, prevState, _objectSpread({}, disabledAll, _defineProperty({}, index - 1, {\n            className: indexStr === correctAnswer ? \"correct\" : \"incorrect\"\n          })));\n        });\n        setShowNextQuestionButton(true);\n      }\n\n      setIncorrectAnswer(true);\n      setCorrectAnswer(false);\n      setIncorrect(incorrect);\n    }\n  } else {\n    var maxNumberOfMultipleSelection = correctAnswer.length;\n\n    if (userInput[currentQuestionIndex] === undefined) {\n      userInput[currentQuestionIndex] = [];\n    }\n\n    if (userInput[currentQuestionIndex].length < maxNumberOfMultipleSelection) {\n      userInput[currentQuestionIndex].push(index);\n\n      if (correctAnswer.includes(index)) {\n        if (userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection) {\n          setButtons(function (prevState) {\n            return _objectSpread({}, prevState, _defineProperty({}, index - 1, {\n              disabled: !prevState[index - 1],\n              className: correctAnswer.includes(index) ? \"correct\" : \"incorrect\"\n            }));\n          });\n        }\n      } else {\n        if (userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection) {\n          setButtons(function (prevState) {\n            return _objectSpread({}, prevState, _defineProperty({}, index - 1, {\n              className: correctAnswer.includes(index) ? \"correct\" : \"incorrect\"\n            }));\n          });\n        }\n      }\n    }\n\n    if (maxNumberOfMultipleSelection === userAttempt) {\n      var cnt = 0;\n\n      for (var i = 0; i < correctAnswer.length; i++) {\n        if (userInput[currentQuestionIndex].includes(correctAnswer[i])) {\n          cnt++;\n        }\n      }\n\n      if (cnt === maxNumberOfMultipleSelection) {\n        correct.push(currentQuestionIndex);\n        setCorrectAnswer(true);\n        setIncorrectAnswer(false);\n        setCorrect(correct);\n        setShowNextQuestionButton(true);\n        setUserAttempt(1);\n      } else {\n        incorrect.push(currentQuestionIndex);\n        setIncorrectAnswer(true);\n        setCorrectAnswer(false);\n        setIncorrect(incorrect);\n        setShowNextQuestionButton(true);\n        setUserAttempt(1);\n      }\n    } else {\n      if (!showNextQuestionButton) {\n        setUserInput(userInput);\n        setUserAttempt(userAttempt + 1);\n      }\n    }\n  }\n};\n\nexports.checkAnswer = checkAnswer;","map":{"version":3,"sources":["F:/REACT/basic-oper/node_modules/react-quiz-component/lib/core-components/helpers.js"],"names":["Object","defineProperty","exports","value","checkAnswer","rawMarkup","_marked","_interopRequireDefault","require","_dompurify","obj","__esModule","default","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","data","sanitizer","sanitize","__html","index","correctAnswer","answerSelectionType","_ref","userInput","userAttempt","currentQuestionIndex","continueTillCorrect","showNextQuestionButton","incorrect","correct","setButtons","setCorrectAnswer","setIncorrectAnswer","setCorrect","setIncorrect","setShowNextQuestionButton","setUserInput","setUserAttempt","indexStr","disabledAll","disabled","undefined","push","indexOf","prevState","className","assign","maxNumberOfMultipleSelection","includes","cnt"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkAnswer = exports.rawMarkup = void 0;\n\nvar _marked = _interopRequireDefault(require(\"marked\"));\n\nvar _dompurify = _interopRequireDefault(require(\"dompurify\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar rawMarkup = function rawMarkup(data) {\n  var sanitizer = _dompurify.default.sanitize;\n  var rawMarkup = (0, _marked.default)(sanitizer(data));\n  return {\n    __html: rawMarkup\n  };\n};\n\nexports.rawMarkup = rawMarkup;\n\nvar checkAnswer = function checkAnswer(index, correctAnswer, answerSelectionType, _ref) {\n  var userInput = _ref.userInput,\n      userAttempt = _ref.userAttempt,\n      currentQuestionIndex = _ref.currentQuestionIndex,\n      continueTillCorrect = _ref.continueTillCorrect,\n      showNextQuestionButton = _ref.showNextQuestionButton,\n      incorrect = _ref.incorrect,\n      correct = _ref.correct,\n      setButtons = _ref.setButtons,\n      setCorrectAnswer = _ref.setCorrectAnswer,\n      setIncorrectAnswer = _ref.setIncorrectAnswer,\n      setCorrect = _ref.setCorrect,\n      setIncorrect = _ref.setIncorrect,\n      setShowNextQuestionButton = _ref.setShowNextQuestionButton,\n      setUserInput = _ref.setUserInput,\n      setUserAttempt = _ref.setUserAttempt;\n  var indexStr = \"\".concat(index);\n  var disabledAll = {\n    0: {\n      disabled: true\n    },\n    1: {\n      disabled: true\n    },\n    2: {\n      disabled: true\n    },\n    3: {\n      disabled: true\n    }\n  };\n\n  if (answerSelectionType === 'single') {\n    if (userInput[currentQuestionIndex] === undefined) {\n      userInput.push(index);\n    }\n\n    if (indexStr === correctAnswer) {\n      if (incorrect.indexOf(currentQuestionIndex) < 0 && correct.indexOf(currentQuestionIndex) < 0) {\n        correct.push(currentQuestionIndex);\n      }\n\n      setButtons(function (prevState) {\n        return _objectSpread({}, prevState, disabledAll, _defineProperty({}, index - 1, {\n          className: indexStr === correctAnswer ? \"correct\" : \"incorrect\"\n        }));\n      });\n      setCorrectAnswer(true);\n      setIncorrectAnswer(false);\n      setCorrect(correct);\n      setShowNextQuestionButton(true);\n    } else {\n      if (correct.indexOf(currentQuestionIndex) < 0 && incorrect.indexOf(currentQuestionIndex) < 0) {\n        incorrect.push(currentQuestionIndex);\n      }\n\n      if (continueTillCorrect) {\n        setButtons(function (prevState) {\n          return Object.assign({}, prevState, _defineProperty({}, index - 1, {\n            disabled: !prevState[index - 1]\n          }));\n        });\n      } else {\n        setButtons(function (prevState) {\n          return Object.assign({}, prevState, _objectSpread({}, disabledAll, _defineProperty({}, index - 1, {\n            className: indexStr === correctAnswer ? \"correct\" : \"incorrect\"\n          })));\n        });\n        setShowNextQuestionButton(true);\n      }\n\n      setIncorrectAnswer(true);\n      setCorrectAnswer(false);\n      setIncorrect(incorrect);\n    }\n  } else {\n    var maxNumberOfMultipleSelection = correctAnswer.length;\n\n    if (userInput[currentQuestionIndex] === undefined) {\n      userInput[currentQuestionIndex] = [];\n    }\n\n    if (userInput[currentQuestionIndex].length < maxNumberOfMultipleSelection) {\n      userInput[currentQuestionIndex].push(index);\n\n      if (correctAnswer.includes(index)) {\n        if (userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection) {\n          setButtons(function (prevState) {\n            return _objectSpread({}, prevState, _defineProperty({}, index - 1, {\n              disabled: !prevState[index - 1],\n              className: correctAnswer.includes(index) ? \"correct\" : \"incorrect\"\n            }));\n          });\n        }\n      } else {\n        if (userInput[currentQuestionIndex].length <= maxNumberOfMultipleSelection) {\n          setButtons(function (prevState) {\n            return _objectSpread({}, prevState, _defineProperty({}, index - 1, {\n              className: correctAnswer.includes(index) ? \"correct\" : \"incorrect\"\n            }));\n          });\n        }\n      }\n    }\n\n    if (maxNumberOfMultipleSelection === userAttempt) {\n      var cnt = 0;\n\n      for (var i = 0; i < correctAnswer.length; i++) {\n        if (userInput[currentQuestionIndex].includes(correctAnswer[i])) {\n          cnt++;\n        }\n      }\n\n      if (cnt === maxNumberOfMultipleSelection) {\n        correct.push(currentQuestionIndex);\n        setCorrectAnswer(true);\n        setIncorrectAnswer(false);\n        setCorrect(correct);\n        setShowNextQuestionButton(true);\n        setUserAttempt(1);\n      } else {\n        incorrect.push(currentQuestionIndex);\n        setIncorrectAnswer(true);\n        setCorrectAnswer(false);\n        setIncorrect(incorrect);\n        setShowNextQuestionButton(true);\n        setUserAttempt(1);\n      }\n    } else {\n      if (!showNextQuestionButton) {\n        setUserInput(userInput);\n        setUserAttempt(userAttempt + 1);\n      }\n    }\n  }\n};\n\nexports.checkAnswer = checkAnswer;"]},"metadata":{},"sourceType":"script"}