{"ast":null,"code":"var _jsxFileName = \"F:\\\\REACT\\\\basic-oper\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [PRODNR, setPRODNR] = useState(\"\");\n  const [PRODNAME, setPRODNAME] = useState(\"\");\n  const [PRODTYPE, setPRODTYPE] = useState(\"\");\n  const [QUANTITY, setQUANTITY] = useState(\"\");\n  const [datalist, setdatalist] = useState([]);\n\n  const Insert = () => {\n    Axios.post(\"http://localhost:3001/insertrow\", {\n      PRODNR: parseInt(PRODNR),\n      PRODNAME: PRODNAME,\n      PRODTYPE: PRODTYPE,\n      QUANTITY: parseInt(QUANTITY)\n    }).then(() => {\n      alert(\"succesful insert\");\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/get\").then(response => {\n      setdatalist(response.data);\n    });\n  }, []);\n\n  const Edit = () => {};\n\n  const deleted = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD NEW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n        class: \"input-box\",\n        children: [\"PRODNR\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"PRODNR\\t\",\n          onChange: e => {\n            setPRODNR(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        className: \"input-box\",\n        children: [\"PRODNAME\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"PRODNAME\",\n          onChange: e => {\n            setPRODNAME(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        className: \"input-box\",\n        children: [\"PRODTYPE\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"PRODTYPE\",\n          onChange: e => {\n            setPRODTYPE(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        className: \"input-box\",\n        children: [\"AVAILABLE QUANTITY\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"\\tAVAILABLE QUANTITY\",\n          onChange: e => {\n            setQUANTITY(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Insert,\n        children: \"CREATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-display\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table-head\",\n              id: \"fit\",\n              children: \"PRODNR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table-head\",\n              children: \"PRODNAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table-head\",\n              children: \"PRODTYPE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table-head\",\n              children: \"AVAILABLE QUANTITY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: datalist.map((data, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.PRODNR\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.PRODNAME\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.PRODTYPE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.AVAILABLEQUANTITY\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: Edit,\n              children: \" Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: deleted,\n              children: \" Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DicHrk7D9t+yDx846kFMs8xiSnY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/REACT/basic-oper/src/App.js"],"names":["React","useEffect","useState","Axios","App","PRODNR","setPRODNR","PRODNAME","setPRODNAME","PRODTYPE","setPRODTYPE","QUANTITY","setQUANTITY","datalist","setdatalist","Insert","post","parseInt","then","alert","get","response","data","Edit","deleted","e","target","value","map","i","AVAILABLEQUANTITY"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Axios from 'axios';\n\n\n\nfunction App() {\n  const [PRODNR,setPRODNR]=useState(\"\");\n  const[PRODNAME,setPRODNAME]=useState(\"\");\n  const[ PRODTYPE,setPRODTYPE]=useState(\"\");\n  const[QUANTITY,setQUANTITY]=useState(\"\");\n  const[datalist,setdatalist]=useState([]);\n  const Insert = () =>{\n  Axios.post(\"http://localhost:3001/insertrow\",{\n      PRODNR:parseInt(PRODNR),\n      PRODNAME:PRODNAME ,\n      PRODTYPE: PRODTYPE ,\n      QUANTITY : parseInt(QUANTITY)\n\n    }).then(() => { alert(\"succesful insert\");}\n    );\n  }\n   useEffect(()=>{\n     Axios.get(\"http://localhost:3001/get\").then((response)=>{\n       setdatalist(response.data);\n     })\n   },[]) ;\n  const Edit =()=> {\n    \n  }\n const deleted = ()=>{\n\n }\n\n    return (\n    <div className=\"App\">\n     \n        <h1>CRUD NEW</h1>\n        <div className=\"form\">\n          <lable class=\"input-box\">\n           PRODNR\t\n          <input type=\"text\" name=\"PRODNR\t\" onChange={(e)=>{setPRODNR(e.target.value)}}></input></lable>\n          <lable className=\"input-box\">\n           PRODNAME\n          <input type=\"text\" name=\"PRODNAME\" onChange={(e)=>{setPRODNAME(e.target.value)}}></input></lable>\n          <lable className=\"input-box\">\n           PRODTYPE\n          <input type=\"text\" name=\"PRODTYPE\" onChange={(e)=>{setPRODTYPE(e.target.value)}}></input>\n          </lable>\n          <lable className=\"input-box\">\n           AVAILABLE QUANTITY\n          <input type=\"text\" name=\"\tAVAILABLE QUANTITY\" onChange={(e)=>{setQUANTITY(e.target.value)}}></input>\n          </lable>\n          <button onClick={Insert}>CREATE</button>\n        \n        </div>\n\n        <div className=\"table-display\">\n          <table>\n            <thead>\n            <tr> \n            <th className=\"table-head\" id=\"fit\">PRODNR</th>\n            <th className=\"table-head\">PRODNAME</th>\n            <th className=\"table-head\">PRODTYPE</th>\n            <th className=\"table-head\" >AVAILABLE QUANTITY</th>\n              \n              \n          \t</tr>\n            </thead>\n            <tbody>\n              {\n              datalist.map((data,i) =>\n\n              <tr>\n              <td>{data.PRODNR}</td>\n              <td>{data.PRODNAME}</td>\n              <td>{data.PRODTYPE}</td>\n              <td>{data.AVAILABLEQUANTITY}</td>\n              <button onClick={Edit}> Edit</button>\n              <button onClick={deleted}> Delete</button>\n              </tr> )\n            }\n          \n            </tbody>\n          \n            </table>\n\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}